import re

def clean_structure(item):
    if isinstance(item, dict):
        cleaned_dict = {}
        for k, v in item.items():
            # Clean extra spaces in the key
            cleaned_key = re.sub(r"\s+", " ", k).strip()

            # Recursively clean the value
            cleaned_value = clean_structure(v)

            # Add key-value pair only if the value is not empty/null and the key itself is not empty
            if cleaned_key and cleaned_value not in [None, "", [], {}]:
                cleaned_dict[cleaned_key] = cleaned_value
        return cleaned_dict

    elif isinstance(item, list):
        # Recursively clean each element in the list
        cleaned_list = [clean_structure(i) for i in item if i not in [None, "", [], {}]]
        return cleaned_list

    elif isinstance(item, str):
        # Replace multiple spaces with a single space
        cleaned_item = re.sub(r"\s+", " ", item).strip()

        # Return None for strings that are explicitly "null"
        if cleaned_item.lower() == "null":
            return None
        return cleaned_item

    else:
        # For other data types (int, float, etc.), return the item as is
        return item
